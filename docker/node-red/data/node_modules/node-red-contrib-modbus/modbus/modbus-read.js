"use strict";module.exports=function(o){require("source-map-support").install();var s=require("./modbus-basics"),d=require("./core/modbus-core"),u=require("./core/modbus-io-core"),l=require("debug")("contribModbus:read");o.nodes.registerType("modbus-read",function(e){o.nodes.createNode(this,e),this.name=e.name,this.topic=e.topic,this.unitid=e.unitid,this.dataType=e.dataType,this.adr=e.adr,this.quantity=e.quantity||1,this.rate=e.rate,this.rateUnit=e.rateUnit,this.delayOnStart=e.delayOnStart,this.startDelayTime=parseInt(e.startDelayTime)||10,this.showStatusActivities=e.showStatusActivities,this.showErrors=e.showErrors,this.showWarnings=e.showWarnings,this.connection=null,this.useIOFile=e.useIOFile,this.ioFile=o.nodes.getNode(e.ioFile),this.useIOForPayload=e.useIOForPayload,this.logIOActivities=e.logIOActivities,this.emptyMsgOnFail=e.emptyMsgOnFail,this.internalDebugLog=l,this.verboseLogging=o.settings.verbose;var r=this,n=!1;function i(e){o.settings.verbose&&r.showWarnings&&r.warn("Read -> "+e+" address: "+r.adr)}r.INPUT_TIMEOUT_MILLISECONDS=1e3,r.statusText="waiting",r.delayTimerReading=!1,r.intervalTimerIdReading=!1,a(r.statusText),i("open node "+r.id);var t=o.nodes.getNode(e.server);function a(e){var i,t;"polling"===e&&n||(i=s.setNodeStatusProperties(e,r.showStatusActivities),t=r.statusText,-1!==e.search("active")||"polling"===e?(e=i.status+(" ( "+r.rate+" "+s.get_timeUnit_name(r.rateUnit))+" ) ",n=!1,e!==t&&r.status({fill:i.fill,shape:i.shape,text:e})):(e=i.status)!==t&&r.status({fill:i.fill,shape:i.shape,text:e}))}t&&(r.onModbusInit=function(){a("initialized")},r.onModbusConnect=function(){a("connected"),r.resetAllReadingTimer(),r.initializeReadingTimer()},r.onModbusRegister=function(){r.showStatusActivities&&a("registered"),t.serialSendingAllowed&&(r.resetAllReadingTimer(),r.initializeReadingTimer(),a("connected"))},r.onModbusActive=function(){a("active")},r.onModbusQueue=function(){a("queue")},r.onModbusError=function(e){a("failure"),t.reconnectOnTimeout&&r.resetAllReadingTimer(),r.showErrors&&r.warn(e)},r.onModbusClose=function(){a("closed"),r.resetAllReadingTimer()},r.onModbusBroken=function(){a("broken"),t.reconnectOnTimeout&&(a("reconnecting after "+t.reconnectTimeout+" msec."),r.resetAllReadingTimer())},r.onModbusReadDone=function(e,i){r.showStatusActivities&&a("reading done");var t,n,o=e.data,s=i.topic||r.topic;r.useIOFile&&r.ioFile.lastUpdatedAt?(r.logIOActivities&&u.internalDebug("node.adr:"+r.adr+" node.quantity:"+r.quantity),t=u.nameValuesFromIOFile(r,i,o,e,r.adr),t=u.filterValueNames(r,t,d.functionCodeModbusRead(r.dataType),r.adr,r.quantity),n={topic:s,responseBuffer:e,input:i,sendingNodeId:r.id},r.useIOForPayload?(n.payload=t,n.values=o):(n.payload=o,n.valueNames=t),r.send([n,{topic:s,payload:e,values:o,input:i,valueNames:t,sendingNodeId:r.id}])):r.send([{topic:s,payload:o,responseBuffer:e,input:i,sendingNodeId:r.id},{topic:s,payload:e,values:o,input:i,sendingNodeId:r.id}])},r.errorProtocolMsg=function(e,i){r.showErrors&&s.logMsgError(r,e,i)},r.onModbusReadError=function(e,i){r.internalDebugLog(e.message),r.errorProtocolMsg(e,i),s.sendEmptyMsgOnFail(r,e,i),s.setModbusError(r,t,e,i)},r.modbusPollingRead=function(){var e;t.client?(e={topic:r.topic||"polling",from:r.name,payload:{unitid:r.unitid,fc:d.functionCodeModbusRead(r.dataType),address:r.adr,quantity:r.quantity,messageId:d.getObjectId()}},r.showStatusActivities&&a("polling"),t.emit("readModbus",e,r.onModbusReadDone,r.onModbusReadError)):a("waiting")},r.resetDelayTimerToRead=function(e){e.delayTimerReading&&(i("resetDelayTimerToRead node "+e.id),clearTimeout(e.delayTimerReading)),e.delayTimerReading=null},r.resetIntervalToRead=function(e){e.intervalTimerIdReading&&(i("resetIntervalToRead node "+e.id),clearInterval(e.intervalTimerIdReading)),e.intervalTimerIdReading=null},r.resetAllReadingTimer=function(){r.resetDelayTimerToRead(r),r.resetIntervalToRead(r)},r.resetAllReadingTimer(),r.startIntervalReading=function(){r.intervalTimerIdReading||(i("startIntervalReading node "+r.id),r.intervalTimerIdReading=setInterval(r.modbusPollingRead,s.calc_rateByUnit(r.rate,r.rateUnit)))},r.initializeReadingTimer=function(){r.resetAllReadingTimer(),r.delayOnStart?(i("initializeReadingTimer delay timer node "+r.id),r.delayTimerReading=setTimeout(r.startIntervalReading,r.INPUT_TIMEOUT_MILLISECONDS*r.startDelayTime)):r.startIntervalReading()},r.removeNodeListenerFromModbusClient=function(){t.removeListener("mbinit",r.onModbusInit),t.removeListener("mbqueue",r.onModbusQueue),t.removeListener("mbconnected",r.onModbusConnect),t.removeListener("mbactive",r.onModbusActive),t.removeListener("mberror",r.onModbusError),t.removeListener("mbclosed",r.onModbusClose),t.removeListener("mbbroken",r.onModbusBroken),t.removeListener("mbregister",r.onModbusRegister),t.removeListener("mbderegister",r.onModbusClose)},this.on("close",function(e){r.resetAllReadingTimer(),r.removeNodeListenerFromModbusClient(),a("closed"),i("close node "+r.id),t.deregisterForModbus(r.id,e)}),r.showStatusActivities&&(t.on("mbinit",r.onModbusInit),t.on("mbqueue",r.onModbusQueue)),t.on("mbconnected",r.onModbusConnect),t.on("mbactive",r.onModbusActive),t.on("mberror",r.onModbusError),t.on("mbclosed",r.onModbusClose),t.on("mbbroken",r.onModbusBroken),t.on("mbregister",r.onModbusRegister),t.on("mbderegister",r.onModbusClose),t.registerForModbus(r))}),o.httpAdmin.post("/modbus/read/inject/:id",o.auth.needsPermission("modbus.inject.write"),function(i,t){i=o.nodes.getNode(i.params.id);if(i)try{i.modbusPollingRead(),t.sendStatus(200)}catch(e){t.sendStatus(500),i.error(o._("modbusinject.failed",{error:e.toString()}))}else t.sendStatus(404)})};
//# sourceMappingURL=maps/modbus-read.js.map
